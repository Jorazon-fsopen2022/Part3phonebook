{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterState","listFilter","setListFilter","value","onChange","event","target","PersonForm","baseURL","personsState","nameState","numberState","showNotification","persons","setPersons","newName","setNewName","newNumber","setNewNumber","addPerson","preventDefault","existing","find","person","name","window","confirm","axios","put","id","number","then","response","data","map","p","catch","newPerson","post","concat","onSubmit","onClick","Persons","filter","toLocaleLowerCase","includes","match","delete","finally","deletePerson","Notification","message","color","className","style","App","useState","messageText","setMessageText","messageColor","setMessageColor","useEffect","get","text","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10ffb81e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filterState }) => {\r\n\tconst [listFilter, setListFilter] = filterState;\r\n\r\n\tconst updateListFilter = (event) => {\r\n\t\tsetListFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form>\r\n\t\t\tfilter shown with <input value={listFilter} onChange={updateListFilter} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst PersonForm = ({ baseURL, personsState, nameState, numberState, showNotification }) => {\r\n\tconst [persons, setPersons] = personsState;\r\n\tconst [newName, setNewName] = nameState;\r\n\tconst [newNumber, setNewNumber] = numberState;\r\n\r\n\tconst addPerson = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst existing = persons.find((person) => person.name === newName);\r\n\t\tif (existing) {\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t`${existing.name} is already added to phonebook, replace the opld number with a sew one?`,\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.put(`${baseURL}/${existing.id}`, {\r\n\t\t\t\t\t\t...existing,\r\n\t\t\t\t\t\tnumber: newNumber,\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tshowNotification(`Changed number of ${response.data.name}`, \"green\");\r\n\t\t\t\t\t\tsetPersons(persons.map((p) => (p.id !== existing.id ? p : response.data)));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() =>\r\n\t\t\t\t\t\tshowNotification(`Number change of ${existing.name} failed`, \"red\"),\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst newPerson = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber,\r\n\t\t};\r\n\t\taxios.post(baseURL, newPerson).then((response) => {\r\n\t\t\tsetPersons(persons.concat(response.data));\r\n\t\t\tshowNotification(`Added ${response.data.name}`, \"green\");\r\n\t\t});\r\n\t\tsetNewName(\"\");\r\n\t\tsetNewNumber(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={addPerson}>\r\n\t\t\t<h2>add a new</h2>\r\n\t\t\t<div>\r\n\t\t\t\tname:{\" \"}\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={newName}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetNewName(event.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber:{\" \"}\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={newNumber}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetNewNumber(event.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={addPerson}>add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Persons = ({ baseURL, personsState, listFilter, showNotification }) => {\r\n\tconst [persons, setPersons] = personsState;\r\n\r\n\tconst deletePerson = (id) => {\r\n\t\tconst match = persons.find((p) => p.id === id);\r\n\t\tif (window.confirm(`Delete ${match.name}?`)) {\r\n\t\t\taxios\r\n\t\t\t\t.delete(`${baseURL}/${id}`)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tshowNotification(`${match.name} was removed`, \"green\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t`Information of ${match.name} has already been removed from the server`,\r\n\t\t\t\t\t\t\"red\",\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => setPersons(persons.filter((p) => p.id !== id)));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{persons\r\n\t\t\t\t.filter((person) => {\r\n\t\t\t\t\treturn person.name.toLocaleLowerCase().includes(listFilter);\r\n\t\t\t\t})\r\n\t\t\t\t.map((person) => (\r\n\t\t\t\t\t<li key={person.name}>\r\n\t\t\t\t\t\t{person.name} {person.number}{\" \"}\r\n\t\t\t\t\t\t<button onClick={() => deletePerson(person.id)}>delete</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, color }) => {\r\n\tif (!message) return null;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={\"notification\"} style={{ color: color }}>\r\n\t\t\t\t{message}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nconst baseURL = \"/api/persons\";\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState(\"\");\n\tconst [newNumber, setNewNumber] = useState(\"\");\n\tconst [listFilter, setListFilter] = useState(\"\");\n\tconst [messageText, setMessageText] = useState(null);\n\tconst [messageColor, setMessageColor] = useState(\"green\");\n\n\tuseEffect(() => {\n\t\taxios.get(baseURL).then((response) => {\n\t\t\tsetPersons(response.data);\n\t\t});\n\t}, []);\n\n\tconst showNotification = (text, color) => {\n\t\tsetMessageText(text);\n\t\tsetMessageColor(color);\n\t\tsetTimeout(() => setMessageText(null), 5000);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification message={messageText} color={messageColor} />\n\t\t\t<Filter filterState={[listFilter, setListFilter]} />\n\t\t\t<PersonForm\n\t\t\t\tbaseURL={baseURL}\n\t\t\t\tpersonsState={[persons, setPersons]}\n\t\t\t\tnameState={[newName, setNewName]}\n\t\t\t\tnumberState={[newNumber, setNewNumber]}\n\t\t\t\tshowNotification={showNotification}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons\n\t\t\t\tbaseURL={baseURL}\n\t\t\t\tpersonsState={[persons, setPersons]}\n\t\t\t\tlistFilter={listFilter}\n\t\t\t\tshowNotification={showNotification}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}